syntax = "proto3";

// 使用命令 protoc -I .  --go_out=. raft.proto ， 如果import加上包又报错

package graft;

enum EntryType {
    ENTRY_TYPE_UNKNOWN = 0;
    ENTRY_TYPE_NO_OP = 1;
    ENTRY_TYPE_DATA = 2;
    ENTRY_TYPE_CONFIGURATION= 3;
};

enum ErrorType {
    ERROR_TYPE_NONE = 0;
    ERROR_TYPE_LOG = 1;
    ERROR_TYPE_STABLE = 2;
    ERROR_TYPE_SNAPSHOT = 3;
    ERROR_TYPE_STATE_MACHINE = 4;
};


enum FileSource {
    FILE_SOURCE_LOCAL = 0;
    FILE_SOURCE_REFERENCE = 1;
}

message LocalFileMeta {
    bytes user_meta = 1;
    FileSource source = 2;
    string checksum = 3;
}


// data store in baidu-rpc's attachment
message EntryMeta {
    int64 term = 1;
    EntryType type = 2;
    repeated string peers = 3;
    int64 data_len = 4;
    // Don't change field id of `old_peers' in the consideration of backward
    // compatibility
    repeated string old_peers = 5;
};


message ConfigurationPBMeta {
    repeated string peers = 1;
    repeated string old_peers = 2;
};

message LogPBMeta {
    int64 first_log_index = 1;
};

message StablePBMeta {
    int64 term = 1;
    string votedfor = 2;
};

message LocalSnapshotPbMeta {
    message File {
        string name = 1;
        LocalFileMeta meta = 2;
    };
    SnapshotMeta meta = 1;
    repeated File files = 2;
}




message RequestVoteRequest {
    string group_id = 1;
    string server_id = 2;
    string peer_id = 3;
    int64 term = 4;
    int64 last_log_term = 5;
    int64 last_log_index = 6;
};

message RequestVoteResponse {
    int64 term = 1;
    bool granted = 2;
};

message AppendEntriesRequest {
    string group_id = 1;
    string server_id = 2;
    string peer_id = 3;
    int64 term = 4;
    int64 prev_log_term = 5;
    int64 prev_log_index = 6;
    repeated EntryMeta entries = 7;
    int64 committed_index = 8;
};

message AppendEntriesResponse {
    int64 term = 1;
    bool success = 2;
    int64 last_log_index = 3;
};

message SnapshotMeta {
    int64 last_included_index = 1;
    int64 last_included_term = 2;
    repeated string peers = 3;
    repeated string old_peers = 4;
}

message InstallSnapshotRequest {
    string group_id = 1;
    string server_id = 2;
    string peer_id = 3;
    int64 term = 4;
    SnapshotMeta meta = 5;
    string uri = 6;
};

message InstallSnapshotResponse {
    int64 term = 1;
    bool success = 2;
};

message TimeoutNowRequest {
    string group_id = 1;
    string server_id = 2;
    string peer_id = 3;
    int64 term = 4;
}

message TimeoutNowResponse {
    int64 term = 1;
    bool success = 2;
}

service RaftService {
    rpc pre_vote (RequestVoteRequest) returns (RequestVoteResponse);

    rpc request_vote (RequestVoteRequest) returns (RequestVoteResponse);

    rpc append_entries (AppendEntriesRequest) returns (AppendEntriesResponse);

    rpc install_snapshot (InstallSnapshotRequest) returns (InstallSnapshotResponse);

    rpc timeout_now (TimeoutNowRequest) returns (TimeoutNowResponse);
};

